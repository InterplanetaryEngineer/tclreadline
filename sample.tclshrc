
package require tclreadline

# Execute `ls' after every `cd'. (This was the
# default up to 0.8 == tclreadline_version.)
# if {"" == [info procs cd]} {
#     catch {rename ::tclreadline::Cd ""}
#     rename cd ::tclreadline::Cd
#     proc cd {args} {
#         if {[catch {eval ::tclreadline::Cd $args} message]} {
#             puts stderr "$message"
#         }
#         tclreadline::ls
#     }
# }


# Use tclreadline's fancy ls proc.
# namespace import tclreadline::ls


# tclreadline::Print is on (`yes') by default.
# This mimics the command echoing like in the
# non-readline interactive tclsh.
# If you don't like this, uncomment the following
# line.
# tclreadline::Print no

# namespace import tclreadline::Print


set tclreadline::historyLength 200


# Uncomment the following line to disable tclreadline's
# script completer.
# ::tclreadline::readline customcompleter ""


# Automatically save the history after every
# command (instead of when cleanly exiting)
set tclreadline::autosave 1


tclreadline::Loop

